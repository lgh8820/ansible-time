# Configuration for ntpd; see ntp.conf(5) for help
# http://www.eecis.udel.edu/~mills/ntp/html

# WARNING: This file is auto-generated from the provisioning
#          scripts. Do not edit by hand because your changes
#          will likely be overwritten.


# Servers and peers
# -----------------

{% if time_servers %}
# For type s and r addresses, this command mobilizes a
# persistent client mode association with the specified remote
# server or local radio clock. In this mode the local clock can
# synchronized to the remote server, but the remote server can
# never be synchronized to the local clock. This command should
# not be used for type b or m addresses.
{% for server in time_servers %}
server {{server}}
{% endfor %}
{% endif %}

{% if time_peers %}
# For type s addresses (only), this command mobilizes a
# persistent symmetric-active mode association with the
# specified remote peer. In this mode the local clock can be
# synchronized to the remote peer or the remote peer can be
# synchronized to the local clock. This is useful in a network
# of servers where, depending on various failure scenarios,
# either the local or remote peer may be the better source of
# time. This command should NOT be used for type b, m or r
# addresses.
{% for peer in time_peers %}
peer {{peer}}
{% endfor %}
{% endif %}

{% if time_manycasts %}
# For type m addresses (only), this command mobilizes a manycast
# client mode association for the multicast address specified.
# In this case a specific address must be supplied which matches
# the address used on the manycastserver command for the
# designated manycast servers. The NTP multicast address
# 224.0.1.1 assigned by the IANA should NOT be used, unless
# specific means are taken to avoid spraying large areas of the
# Internet with these messages and causing a possibly massive
# implosion of replies at the sender. The manycastserver command
# specifies that the local server is to operate in client mode
# with the remote servers that are discovered as the result of
# broadcast/multicast messages. The client broadcasts a request
# message to the group address associated with the specified
# address and specifically enabled servers respond to these
# messages.  The client selects the servers providing the best
# time and continues as with the server command. The remaining
# servers are discarded as if never heard.
{% for client in time_manycasts %}
manycastclient {{client}}
{% endfor %}
{% endif %}

{% if time_broadcasts %}
# For type b and m addresses (only), this command mobilizes a
# persistent broadcast mode association. Multiple commands can
# be used to specify multiple local broadcast interfaces
# (subnets) and/or multiple multicast groups. Note that local
# broadcast messages go only to the interface associated with
# the subnet specified, but multicast messages go to all
# interfaces.  In broadcast mode the local server sends periodic
# broadcast messages to a client population at the address
# specified, which is usually the broadcast address on (one of)
# the local network(s) or a multicast address assigned to NTP.
# The IANA has assigned the multicast group address IPv4
# 224.0.1.1 and IPv6 ff05::101 (site local) exclusively to NTP,
# but other nonconflicting addresses can be used to contain the
# messages within administrative boundaries. Ordinarily, this
# specification applies only to the local server operating as a
# sender; for operation as a broadcast client, see the
# broadcastclient or multicastclient commands below.
{% for broadcast in time_broadcasts %}
broadcast {{broadcast}}
{% endfor %}
{% endif %}


# Access control and authentication
# ---------------------------------

{% if time_restrict %}
# The address argument expressed in dotted-quad form is the
# address of a host or network. Alternatively, the address
# argument can be a valid host DNS name. The mask argument
# expressed in dottedquad form defaults to 255.255.255.255,
# meaning that the address is treated as the address of an
# individual host. A default entry (address 0.0.0.0, mask
# 0.0.0.0) is always included and is always the first entry in
# the list. Note that text string default, with no mask option,
# may be used to indicate the default entry. In the current
# implementation, flag always restricts access, i.e., an entry
# with no flags indicates that free access to the server is to
# be given. The flags are not orthogonal, in that more
# restrictive flags will often make less restrictive ones
# redundant. The flags can generally be classed into two
# categories, those which restrict time service and those which
# restrict informational queries and attempts to do run-time
# reconfiguration of the server.
{% for rule in time_restrict %}
restrict {{rule}}
{% endfor %}
{% endif %}

# Set the parameters of the rate control facility which protects
# the server from client abuse. If the limited flag is present
# in the ACL, packets that violate these limits are discarded.
# If, in addition, the kod flag is present, a kiss-o'-death
# packet is returned.
discard minimum {{time_discard_minimum}} average {{time_discard_average}}

# Enables the server to synchronize with unconfigured peers only
# if the peer has been correctly authenticated using either
# public key or private key cryptography.
{{'enable' if time_authenticate else 'disable'}} auth

# Specifies the key identifier to use with the ntpq(8) utility,
# which uses the standard protocol defined in RFC-1305. The key
# argument is the key identifier for a trusted key, where the
# value can be in the range 1 to 65,534, inclusive.
controlkey {{time_key_control}}

# This command requires the OpenSSL library. It activates public
# key cryptography, selects the message digest and signature
# encryption scheme and loads the required private and public
# values described above. If one or more files are left
# unspecified, the default names are used as described above.
# Unless the complete path and name of the file are specified,
# the location of a file is relative to the keys directory
# specified in the keysdir command or default.
crypto
{%- if time_crypto_cert_file   %} cert {{time_crypto_cert_file}}     {%- endif %}
{%  if time_crypto_gqpar_file  %} gqpar {{time_crypto_gqpar_file}}   {%- endif %}
{%  if time_crypto_host_file   %} host {{time_crypto_host_file}}     {%- endif %}
{%  if time_crypto_iffpar_file %} iffpar {{time_crypto_iffpar_file}} {%- endif %}
{%  if time_crypto_leap_file   %} leap {{time_crypto_leap_file}}     {%- endif %}
{%  if time_crypto_mvpar_file  %} mvpar {{time_crypto_mvpar_file}}   {%- endif %}
{%  if time_crypto_password    %} pw {{time_crypto_password}}        {%- endif %}
{%  if time_crypto_rand_file   %} randfile {{time_crypto_rand_file}} {%- endif %}
{%  if time_crypto_sign_file   %} sign {{time_crypto_sign_file}}     {%- endif %}

{% if time_crypto_keys_dir %}
# This command specifies the default directory path for
# cryptographic keys, parameters and certificates.
keysdir {{time_crypto_keys_dir}}
{% endif %}

{% if time_crypto_keys_file %}
# Specifies the complete path and location of the MD5 key file
# containing the keys and key identifiers used by ntpd(8),
# ntpq(8) and ntpdc when operating with symmetric key
# cryptography. This is the same operation as the -k command
# line option.
keys {{time_crypto_keys_file}}
{% endif %}

{% if time_crypto_request_key %}
# Specifies the key identifier to use with the ntpdc(8) utility
# program, which uses a proprietary protocol specific to this
# implementation of ntpd(8). The key argument is a key
# identifier for the trusted key, where the value can be in the
# range 1 to 65,534, inclusive.
requestkey {{time_crypto_request_key}}
{% endif %}

{% if time_crypto_revoke_interval %}
# Specifies the interval between re-randomization of certain
# cryptographic values used by the Autokey scheme, as a power of
# 2 in seconds. These values need to be updated frequently in
# order to deflect brute-force attacks on the algorithms of the
# scheme; however, updating some values is a relatively
# expensive operation. The default interval is 16  (65,536 s or
# about 18 hours). For poll intervals above the specified
# interval, the values will be updated for every message sent.
revoke {{time_crypto_revoke_interval}}
{% endif %}

{% if time_crypto_trusted_keys %}
# Specifies the key identifiers which are trusted for the
# purposes of authenticating peers with symmetric key
# cryptography, as well as keys used by the ntpq(8) and ntpdc(8)
# programs. The authentication procedures require that both the
# local and remote servers share the same key and key identifier
# for this purpose, although different keys can be used with
# different servers. The key arguments are 32-bit unsigned
# integers with values from 1 to 65,534.
trusted {{time_crypto_trusted_keys|join(' ')}}
{% endif %}


# Options
# -------

# This command specifies the complete path and name of the file
# used to record the frequency of the local clock oscillator.
# This is the same operation as the -f command line option.  If
# the file exists, it is read at startup in order to set the
# initial frequency and then updated once per hour with the
# current frequency computed by the daemon.  If the file name is
# specified, but the file itself does not exist, the starts with
# an initial frequency of zero and creates the file when writing
# it for the first time. If this command is not given, the
# daemon will always start with an initial frequency of zero.
#
# The file format consists of a single line containing a single
# floating point number, which records the frequency offset
# measured in parts-per-million  (PPM).  The file is updated by
# first writing the current drift value into a temporary file
# and then renaming this file to replace the old version.  This
# implies that ntpd(8) must have write permission for the
# directory the drift file is located in, and that file system
# links, symbolic or otherwise, should be avoided.
driftfile {{time_drift_file}}

# Enables the calibrate feature for reference clocks.
{{'enable' if time_calibrate else 'disable'}} calibrate

# Enables the kernel time discipline, if available.
{{'enable' if time_kernel_discipline else 'disable'}} kernel

# Enables time and frequency discipline. In effect, this switch
# opens and closes the feedback loop, which is useful for
# testing.
{{'enable' if time_frequency_discipline else 'disable'}} ntp


# Monitoring
# ----------

# Enables the monitoring facility.
{{'enable' if time_monitoring else 'disable'}} monitor

{% if time_stats_sources %}
# Enables the statistics facility.
statistics {{time_stats_sources|join(' ')}}
statsdir {{time_stats_dir}}
filegen loopstats file loopstats type day enable
filegen peerstats file peerstats type day enable
filegen clockstats file clockstats type day enable
{% endif %}

# This command controls the amount and type of output written to
# the system syslog(3) facility or the alternate log file.
logconfig {{time_log_sources|join(' ')}}

{% if time_log_destination != 'syslog' %}
# Log to file instead of syslog.
logfile {{time_log_destination}}
{% endif %}
